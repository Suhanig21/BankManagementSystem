package com.loan.service;

import com.loan.model.LoanApplication;
import com.loan.repository.LoanApplicationRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.List;

@Service
public class LoanApplicationService {

    @Autowired
    private LoanApplicationRepository loanRepo;

    @Value("${file.upload-dir}")
    private String uploadDir;

    public LoanApplication submitApplication(LoanApplication app) {
        return loanRepo.save(app);
    }

    public List<LoanApplication> getAllApplications() {
        return loanRepo.findAll();
    }

    public LoanApplication getApplicationById(Long id) {
        return loanRepo.findById(id).orElse(null);
    }

    public LoanApplication approveLoan(Long id) {
        LoanApplication loan = loanRepo.findById(id)
                .orElseThrow(() -> new RuntimeException("Loan not found"));
        loan.setStatus("Approved");
        return loanRepo.save(loan);
    }

    public LoanApplication rejectLoan(Long id) {
        LoanApplication loan = loanRepo.findById(id)
                .orElseThrow(() -> new RuntimeException("Loan not found"));
        loan.setStatus("Rejected");
        return loanRepo.save(loan);
    }

    public String storeDocument(Long id, MultipartFile file) throws IOException {
        LoanApplication loan = loanRepo.findById(id).orElseThrow(() -> new RuntimeException("Loan not found"));

        String filename = UUID.randomUUID() + "_" + file.getOriginalFilename();
        Path path = Paths.get("uploads/" + filename);
        Files.copy(file.getInputStream(), path, StandardCopyOption.REPLACE_EXISTING);

        loan.setDocumentPath(path.toString());
        loanRepo.save(loan);

        return path.toString();
    }

}
